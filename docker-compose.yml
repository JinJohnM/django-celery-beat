version: '3'
services:
  postgresdb:
    image: "postgres:latest"
    ports:
      - "5432:5432"
    environment: 
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password1234
    volumes:
      - db:/var/lib/postgresql/data

  django:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    command: bash -c "python mysite/manage.py runserver 0.0.0.0:8080"
    depends_on: 
      - postgresdb
      - redis
    volumes:
      - ./:/app

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - 'redisdata:/data'

  queue-a:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      - WORKER_QUEUE=queue_a
      - WORKER_NAME=worker_A
    command: bash -c "chmod +x entrypoint-worker.sh && ./entrypoint-worker.sh"
    depends_on:
      - django
  queue-b:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      - WORKER_QUEUE=queue_b
      - WORKER_NAME=worker_B
    command: bash -c "chmod +x entrypoint-worker.sh && ./entrypoint-worker.sh"
    depends_on:
      - django
      
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.worker
    command: bash -c "chmod +x entrypoint-beat.sh && ./entrypoint-beat.sh"
    depends_on:
      - django
    
  queue-monitor:
    image: mher/flower
    environment: 
      QUEUE_MONITOR_USERNAME: prontotools
      QUEUE_MONITOR_PASSWORD: 12345
    command: flower --address=0.0.0.0 --port=5555 --broker=redis://redis:6379
    ports:
      - '5555:5555'

volumes:
  db:
  redisdata: